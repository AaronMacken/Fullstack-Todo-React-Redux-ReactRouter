{"ast":null,"code":"// File that exports actions for our root reducer to use so\n// we dont have to hard code the action objects each time whe want to use them\n// if ever we need to change the name of the action,\n// it only has to be changed here, and not multiple times\nexport const GET_TODOS = \"GET_TODOS\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\n\nfunction handleTodos(data) {\n  return {\n    type: GET_TODOS,\n    data\n  };\n}\n\nfunction handleAdd(todo) {\n  return {\n    type: ADD_TODO,\n    todo\n  };\n}\n\nfunction handleUpdate(todo) {\n  return {\n    type: UPDATE_TODO,\n    todo\n  };\n}\n\nfunction handleRemove(id) {\n  return {\n    type: REMOVE_TODO,\n    id\n  };\n} // action creator that returns a function that executes some async code\n// then returns the action once the async code has completed\n\n\nexport function getTodos() {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/todos\").then(res => res.json()).then(data => dispatch(handleTodos(data))).catch(err => console.log(\"Something went wrong\", err));\n  };\n}\nexport function addTodo(task) {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/todos\", {\n      method: \"POST\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        task: task,\n        completed: false\n      })\n    }).then(res => res.json()).then(todo => dispatch(handleAdd(todo))).catch(err => console.log(\"Something went wrong\", err));\n  };\n}\nexport function updateTodo(todo) {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/todos/\".concat(todo._id), {\n      method: \"PUT\",\n      body: JSON.stringify({\n        completed: !todo.completed\n      })\n    }).then(response => response.json()).then(todo => dispatch(handleUpdate(todo))).then(json => console.log(json));\n  };\n}\nexport function removeTodo(id) {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/todos/\".concat(id), {\n      method: \"DELETE\"\n    }).then(res => res.json()).then(data => dispatch(handleRemove(id))).catch(err => console.log(\"Something went wrong\", err));\n  };\n}","map":{"version":3,"sources":["/Users/aaronmacken/Desktop/react-redux-todos/src/actionCreator.js"],"names":["GET_TODOS","ADD_TODO","REMOVE_TODO","UPDATE_TODO","handleTodos","data","type","handleAdd","todo","handleUpdate","handleRemove","id","getTodos","dispatch","fetch","then","res","json","catch","err","console","log","addTodo","task","method","headers","Headers","body","JSON","stringify","completed","updateTodo","_id","response","removeTodo"],"mappings":"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","sourcesContent":["// File that exports actions for our root reducer to use so\n// we dont have to hard code the action objects each time whe want to use them\n\n// if ever we need to change the name of the action,\n// it only has to be changed here, and not multiple times\n\n\nexport const GET_TODOS = \"GET_TODOS\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\n\nfunction handleTodos(data) {\n    return {\n        type: GET_TODOS,\n        data\n    }\n}\n\nfunction handleAdd(todo) {\n    return {\n        type: ADD_TODO,\n        todo\n    }\n}\n\nfunction handleUpdate(todo) {\n    return {\n        type: UPDATE_TODO,\n        todo\n    }\n}\n\nfunction handleRemove(id) {\n    return {\n        type: REMOVE_TODO,\n        id\n    }\n}\n\n\n// action creator that returns a function that executes some async code\n// then returns the action once the async code has completed\nexport function getTodos() {\n    return dispatch => {\n        return fetch(\"http://localhost:3001/api/todos\")\n            .then(res => res.json())\n            .then(data => dispatch(handleTodos(data)))\n            .catch(err => console.log(\"Something went wrong\", err));\n    };\n}\n\nexport function addTodo(task) {\n    return dispatch => {\n        return fetch(\"http://localhost:3001/api/todos\", {\n            method: \"POST\",\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            }),\n            body: JSON.stringify({ task: task, completed: false })\n        })\n            .then(res => res.json())\n            .then(todo => dispatch(handleAdd(todo)))\n            .catch(err => console.log(\"Something went wrong\", err))\n\n    }\n}\n\n\nexport function updateTodo(todo) {\n    return dispatch => {\n        return fetch(`http://localhost:3001/api/todos/${todo._id}`, {\n            method: \"PUT\",\n            body: JSON.stringify({ completed: !todo.completed })\n        })\n            .then(response => response.json())\n            .then(todo => dispatch(handleUpdate(todo)))\n            .then(json => console.log(json))\n    }\n\n}\n\nexport function removeTodo(id) {\n    return dispatch => {\n        return fetch(`http://localhost:3001/api/todos/${id}`, {\n            method: \"DELETE\",\n        })\n            .then(res => res.json())\n            .then(data => dispatch(handleRemove(id)))\n            .catch(err => console.log(\"Something went wrong\", err))\n    }\n}"]},"metadata":{},"sourceType":"module"}