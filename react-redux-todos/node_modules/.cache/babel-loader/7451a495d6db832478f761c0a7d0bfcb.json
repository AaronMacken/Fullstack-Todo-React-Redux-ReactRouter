{"ast":null,"code":"var _jsxFileName = \"/Users/aaronmacken/Desktop/react-redux-todos/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport Todo from './Todo'; // this statement connects our react state with the redux store\n\nimport { connect } from 'react-redux';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {} // component now has access to a dispatch prop,\n  // ---- NEXT ----> SEEING HOW TO GET STATE FROM REDUX STORE\n\n\n  render() {\n    let todos = this.props.todos.map((e, ind) => React.createElement(Todo, {\n      task: e,\n      index: ind,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Enter a task: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"task\",\n      id: \"task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Add a task!\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, todos));\n  }\n\n} // must take in reduxState as a param and return an object\n// the name for the function is arbitrary, but it takes the redux state and maps it to our components props\n\n\nfunction mapStateToProps(reduxState) {\n  return {\n    todos: reduxState.todos\n  };\n} // connecting our component to the redux store, the store is defined in the Provider component on the index.js file\n// which defines which store we are connecting to\n// after we are all connected, the REDUX STATE is now available as PROPS for this component\n\n\nexport default connect(mapStateToProps)(TodoList);","map":{"version":3,"sources":["/Users/aaronmacken/Desktop/react-redux-todos/src/TodoList.js"],"names":["React","Component","Todo","connect","TodoList","constructor","props","handleSubmit","bind","e","render","todos","map","ind","mapStateToProps","reduxState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAED,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACF;;AACDD,EAAAA,YAAY,CAACE,CAAD,EAAI,CAEf,CAR4B,CAS7B;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAX,CAAiBC,GAAjB,CAAqB,CAACH,CAAD,EAAII,GAAJ,KAC7B,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEJ,CAAZ;AAAe,MAAA,KAAK,EAAEI,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,CAAZ;AAGA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKI,KADL,CANJ,CADJ;AAaH;;AA5B4B,C,CA+BjC;AACA;;;AACA,SAASG,eAAT,CAAyBC,UAAzB,EAAqC;AACjC,SAAO;AACHJ,IAAAA,KAAK,EAAEI,UAAU,CAACJ;AADf,GAAP;AAGH,C,CAED;AACA;AACA;;;AACA,eAAeR,OAAO,CAACW,eAAD,CAAP,CAAyBV,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Todo from './Todo';\n\n// this statement connects our react state with the redux store\nimport {connect} from 'react-redux';\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props)\n    \n       this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit(e) {\n\n    }\n    // component now has access to a dispatch prop,\n    // ---- NEXT ----> SEEING HOW TO GET STATE FROM REDUX STORE\n    render() {\n        let todos = this.props.todos.map((e, ind) => (\n            <Todo task={e} index={ind}/>\n        ))\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"task\">Enter a task: </label>\n                    <input type=\"text\" name=\"task\" id=\"task\"></input>\n                    <button type=\"button\">Add a task!</button>\n                </form>\n                <ul>\n                    {todos}\n                </ul>\n                \n            </div>\n        )\n    }\n}\n\n// must take in reduxState as a param and return an object\n// the name for the function is arbitrary, but it takes the redux state and maps it to our components props\nfunction mapStateToProps(reduxState) {\n    return {\n        todos: reduxState.todos\n    }\n}\n\n// connecting our component to the redux store, the store is defined in the Provider component on the index.js file\n// which defines which store we are connecting to\n// after we are all connected, the REDUX STATE is now available as PROPS for this component\nexport default connect(mapStateToProps)(TodoList);\n\n"]},"metadata":{},"sourceType":"module"}