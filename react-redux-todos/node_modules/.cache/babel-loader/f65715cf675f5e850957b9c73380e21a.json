{"ast":null,"code":"var _jsxFileName = \"/Users/aaronmacken/Desktop/react-redux-todos/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; // connect react to redux\n// get createStore function from redux\n\nimport { createStore } from 'redux'; // destructured version of: Redux.createStore \n// get our reducer function from our rootReducer file\n\nimport rootReducer from './rootReducer'; // Provider connects the react application with the redux store\n// this is done by wrapping the application component in a provider component\n\nimport { Provider } from 'react-redux'; // create the store, second param is for chrome dev tools extension\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nReactDOM.render( // pass into the provider component a store prop that uses our store const\n// by wrapping the app, any child component has access to the redux store\n// now all components will be able to dispatch actions, instead of only the \n// store being able to\nReact.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n})), document.getElementById('root'));","map":{"version":3,"sources":["/Users/aaronmacken/Desktop/react-redux-todos/src/index.js"],"names":["React","ReactDOM","App","createStore","rootReducer","Provider","store","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAGA;AAEA;;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CAAqC;AAErC;;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;AACA;;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAEA;;AACA,MAAMC,KAAK,GAAGH,WAAW,CAACC,WAAD,EACrBG,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EADlB,CAAzB;AAIAP,QAAQ,CAACQ,MAAT,EACI;AACA;AACA;AACA;AACA,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADL,CALJ,EASMI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATN","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n// connect react to redux\n\n// get createStore function from redux\nimport { createStore } from 'redux'; // destructured version of: Redux.createStore \n\n// get our reducer function from our rootReducer file\nimport rootReducer from './rootReducer';\n\n// Provider connects the react application with the redux store\n// this is done by wrapping the application component in a provider component\nimport { Provider } from 'react-redux';\n\n// create the store, second param is for chrome dev tools extension\nconst store = createStore(rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\nReactDOM.render(\n    // pass into the provider component a store prop that uses our store const\n    // by wrapping the app, any child component has access to the redux store\n    // now all components will be able to dispatch actions, instead of only the \n    // store being able to\n    <Provider store={store}>\n         <App />\n    </Provider>\n   \n    , document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}