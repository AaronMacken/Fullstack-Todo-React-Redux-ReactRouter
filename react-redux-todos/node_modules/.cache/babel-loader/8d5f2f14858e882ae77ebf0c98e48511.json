{"ast":null,"code":"// File that exports actions for our root reducer to use so\n// we dont have to hard code the action objects each time whe want to use them\n// if ever we need to change the name of the action,\n// it only has to be changed here, and not multiple times\nexport const GET_TODOS = \"GET_TODOS\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\n\nfunction handleTodos(data) {\n  return {\n    type: GET_TODOS,\n    data\n  };\n}\n\nfunction handleAdd(todo) {\n  return {\n    type: ADD_TODO,\n    todo\n  };\n}\n\nfunction handleUpdate(todo) {\n  return {\n    type: UPDATE_TODO,\n    todo\n  };\n}\n\nfunction handleRemove(id) {\n  return {\n    type: REMOVE_TODO,\n    id\n  };\n} // action creator that returns a function that executes some async code\n// then returns the action once the async code has completed\n\n\nexport function getTodos() {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/todos\").then(res => res.json()).then(data => dispatch(handleTodos(data))).catch(err => console.log(\"Something went wrong\", err));\n  };\n}\nexport function addTodo(task) {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/todos\", {\n      method: \"POST\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        task\n      }).then(res => res.json()).then(data => dispatch(handleAdd(data))).catch(err => console.log(\"Something went wrong\", err))\n    });\n  };\n}\nexport function updateTodo(todo) {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/todos\".concat(todo.id), {\n      method: \"PUT\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      }),\n      body: JSON.stringify({\n        todo\n      })\n    });\n  };\n}\nexport function removeTodo(id) {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/todos/\".concat(id), {\n      method: \"DELETE\"\n    }).then(res => res.json()).then(data => dispatch(handleRemove(id))).catch(err => console.log(\"Something went wrong\", err));\n  };\n}","map":{"version":3,"sources":["/Users/aaronmacken/Desktop/react-redux-todos/src/actionCreator.js"],"names":["GET_TODOS","ADD_TODO","REMOVE_TODO","UPDATE_TODO","handleTodos","data","type","handleAdd","todo","handleUpdate","handleRemove","id","getTodos","dispatch","fetch","then","res","json","catch","err","console","log","addTodo","task","method","headers","Headers","body","JSON","stringify","updateTodo","removeTodo"],"mappings":"AAAA;AACA;AAEA;AACA;AAGA,OAAO,MAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;;AAEP,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACvB,SAAO;AACHC,IAAAA,IAAI,EAAEN,SADH;AAEHK,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASE,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,SAAO;AACHF,IAAAA,IAAI,EAAEL,QADH;AAEHO,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASC,YAAT,CAAsBD,IAAtB,EAA4B;AACxB,SAAO;AACHF,IAAAA,IAAI,EAAEH,WADH;AAEHK,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASE,YAAT,CAAsBC,EAAtB,EAA0B;AACtB,SAAO;AACHL,IAAAA,IAAI,EAAEJ,WADH;AAEHS,IAAAA;AAFG,GAAP;AAIH,C,CAGD;AACA;;;AACA,OAAO,SAASC,QAAT,GAAoB;AACvB,SAAOC,QAAQ,IAAI;AACf,WAAOC,KAAK,CAAC,iCAAD,CAAL,CACFC,IADE,CACGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADV,EAEFF,IAFE,CAEGV,IAAI,IAAIQ,QAAQ,CAACT,WAAW,CAACC,IAAD,CAAZ,CAFnB,EAGFa,KAHE,CAGIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC,CAHX,CAAP;AAIH,GALD;AAMH;AAED,OAAO,SAASG,OAAT,CAAiBC,IAAjB,EAAuB;AAC1B,SAAOV,QAAQ,IAAI;AACf,WAAOC,KAAK,CAAC,iCAAD,EAAoC;AAC5CU,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,wBAAgB;AADC,OAAZ,CAFmC;AAK5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,QAAAA;AAAF,OAAf,EACDR,IADC,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEDF,IAFC,CAEIV,IAAI,IAAIQ,QAAQ,CAACN,SAAS,CAACF,IAAD,CAAV,CAFpB,EAGDa,KAHC,CAGKC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC,CAHZ;AALsC,KAApC,CAAZ;AAUH,GAXD;AAYH;AAGG,OAAO,SAASW,UAAT,CAAoBtB,IAApB,EAA0B;AAC7B,SAAOK,QAAQ,IAAI;AACf,WAAOC,KAAK,0CAAmCN,IAAI,CAACG,EAAxC,GAA8C;AACtDa,MAAAA,MAAM,EAAE,KAD8C;AAEtDC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,wBAAgB;AADC,OAAZ,CAF6C;AAKtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAErB,QAAAA;AAAF,OAAf;AALgD,KAA9C,CAAZ;AAQH,GATD;AAUH;AAED,OAAO,SAASuB,UAAT,CAAoBpB,EAApB,EAAwB;AAC3B,SAAOE,QAAQ,IAAI;AACf,WAAOC,KAAK,2CAAoCH,EAApC,GAA0C;AAClDa,MAAAA,MAAM,EAAE;AAD0C,KAA1C,CAAL,CAGFT,IAHE,CAGGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHV,EAIFF,IAJE,CAIGV,IAAI,IAAIQ,QAAQ,CAACH,YAAY,CAACC,EAAD,CAAb,CAJnB,EAKFO,KALE,CAKIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC,CALX,CAAP;AAMH,GAPD;AAQH","sourcesContent":["// File that exports actions for our root reducer to use so\n// we dont have to hard code the action objects each time whe want to use them\n\n// if ever we need to change the name of the action,\n// it only has to be changed here, and not multiple times\n\n\nexport const GET_TODOS = \"GET_TODOS\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\n\nfunction handleTodos(data) {\n    return {\n        type: GET_TODOS,\n        data\n    }\n}\n\nfunction handleAdd(todo) {\n    return {\n        type: ADD_TODO,\n        todo\n    }\n}\n\nfunction handleUpdate(todo) {\n    return {\n        type: UPDATE_TODO,\n        todo\n    }\n}\n\nfunction handleRemove(id) {\n    return {\n        type: REMOVE_TODO,\n        id\n    }\n}\n\n\n// action creator that returns a function that executes some async code\n// then returns the action once the async code has completed\nexport function getTodos() {\n    return dispatch => {\n        return fetch(\"http://localhost:3001/api/todos\")\n            .then(res => res.json())\n            .then(data => dispatch(handleTodos(data)))\n            .catch(err => console.log(\"Something went wrong\", err));\n    };\n}\n\nexport function addTodo(task) {\n    return dispatch => {\n        return fetch(\"http://localhost:3001/api/todos\", {\n            method: \"POST\",\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            }),\n            body: JSON.stringify({ task })\n                .then(res => res.json())\n                .then(data => dispatch(handleAdd(data)))\n                .catch(err => console.log(\"Something went wrong\", err))\n        })\n    }\n}\n\n\n    export function updateTodo(todo) {\n        return dispatch => {\n            return fetch(`http://localhost:3001/api/todos${todo.id}`, {\n                method: \"PUT\",\n                headers: new Headers({\n                    \"Content-Type\": \"application/json\"\n                }),\n                body: JSON.stringify({ todo })\n            })\n\n        }\n    }\n\n    export function removeTodo(id) {\n        return dispatch => {\n            return fetch(`http://localhost:3001/api/todos/${id}`, {\n                method: \"DELETE\",\n            })\n                .then(res => res.json())\n                .then(data => dispatch(handleRemove(id)))\n                .catch(err => console.log(\"Something went wrong\", err))\n        }\n    }"]},"metadata":{},"sourceType":"module"}