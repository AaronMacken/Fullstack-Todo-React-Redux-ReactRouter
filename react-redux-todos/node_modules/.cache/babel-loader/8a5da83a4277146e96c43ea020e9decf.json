{"ast":null,"code":"var _jsxFileName = \"/Users/aaronmacken/Desktop/react-redux-todos/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport Todo from './Todo'; // this statement connects our react state with the redux store\n\nimport { connect } from 'react-redux';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {}\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: [e.target.value]\n    });\n  } // component now has access to a dispatch prop,\n  // ---- NEXT ----> SEEING HOW TO GET STATE FROM REDUX STORE\n\n\n  render() {\n    let todos = this.props.todos.map((e, ind) => React.createElement(Todo, {\n      task: e,\n      index: ind,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Enter a task: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"task\",\n      id: \"task\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Add a task!\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, todos));\n  }\n\n} // must take in reduxState as a param and return an object\n// the name for the function is arbitrary, but it takes the redux state and maps it to our components props\n\n\nfunction mapStateToProps(reduxState) {\n  return {\n    todos: reduxState.todos\n  };\n} // connecting our component to the redux store, the store is defined in the Provider component on the index.js file\n// which defines which store we are connecting to\n// after we are all connected, the REDUX STATE is now available as PROPS for this component\n\n\nexport default connect(mapStateToProps)(TodoList);","map":{"version":3,"sources":["/Users/aaronmacken/Desktop/react-redux-todos/src/TodoList.js"],"names":["React","Component","Todo","connect","TodoList","constructor","props","state","task","handleSubmit","bind","handleChange","e","setState","target","name","value","render","todos","map","ind","mapStateToProps","reduxState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDD,EAAAA,YAAY,CAACG,CAAD,EAAI,CAEf;;AACDD,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,SAAKC,QAAL,CAAc;AACV,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiB,CAACH,CAAC,CAACE,MAAF,CAASE,KAAV;AADP,KAAd;AAIH,GAjB4B,CAoB7B;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG,KAAKZ,KAAL,CAAWY,KAAX,CAAiBC,GAAjB,CAAqB,CAACP,CAAD,EAAIQ,GAAJ,KAC7B,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAER,CAAZ;AAAe,MAAA,KAAK,EAAEQ,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,CAAZ;AAGA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKX,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,EAAE,EAAC,MAAlC;AAAyC,MAAA,QAAQ,EAAE,KAAKE,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKO,KADL,CANJ,CADJ;AAaH;;AAvC4B,C,CA0CjC;AACA;;;AACA,SAASG,eAAT,CAAyBC,UAAzB,EAAqC;AACjC,SAAO;AACHJ,IAAAA,KAAK,EAAEI,UAAU,CAACJ;AADf,GAAP;AAGH,C,CAED;AACA;AACA;;;AACA,eAAef,OAAO,CAACkB,eAAD,CAAP,CAAyBjB,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Todo from './Todo';\n\n// this statement connects our react state with the redux store\nimport { connect } from 'react-redux';\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            task: \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(e) {\n\n    }\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: [e.target.value]\n        })\n\n    }\n\n\n    // component now has access to a dispatch prop,\n    // ---- NEXT ----> SEEING HOW TO GET STATE FROM REDUX STORE\n    render() {\n        let todos = this.props.todos.map((e, ind) => (\n            <Todo task={e} index={ind} />\n        ))\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"task\">Enter a task: </label>\n                    <input type=\"text\" name=\"task\" id=\"task\" onChange={this.handleChange}></input>\n                    <button type=\"button\">Add a task!</button>\n                </form>\n                <ul>\n                    {todos}\n                </ul>\n\n            </div>\n        )\n    }\n}\n\n// must take in reduxState as a param and return an object\n// the name for the function is arbitrary, but it takes the redux state and maps it to our components props\nfunction mapStateToProps(reduxState) {\n    return {\n        todos: reduxState.todos\n    }\n}\n\n// connecting our component to the redux store, the store is defined in the Provider component on the index.js file\n// which defines which store we are connecting to\n// after we are all connected, the REDUX STATE is now available as PROPS for this component\nexport default connect(mapStateToProps)(TodoList);\n\n"]},"metadata":{},"sourceType":"module"}