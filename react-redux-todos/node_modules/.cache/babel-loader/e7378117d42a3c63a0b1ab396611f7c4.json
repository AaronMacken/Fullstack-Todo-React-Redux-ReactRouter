{"ast":null,"code":"var _jsxFileName = \"/Users/aaronmacken/Desktop/react-redux-todos/src/NewTodoForm.js\";\nimport React, { Component } from 'react';\nexport default class NewTodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault(); // dispatch the state value from the input box & reset the input box\n\n    this.props.handleSubmit(this.state.task);\n    e.target.reset(); // this history props was passed down and is coming originally from react router\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Enter a task: \"), React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      required: true,\n      name: \"task\",\n      id: \"task\",\n      value: this.state.task,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Add a task!\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/aaronmacken/Desktop/react-redux-todos/src/NewTodoForm.js"],"names":["React","Component","NewTodoForm","constructor","props","state","task","handleSubmit","bind","handleChange","e","preventDefault","target","reset","setState","name","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAC/CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACRC,MAAAA,IAAI,EAAE;AADE,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDD,EAAAA,YAAY,CAACG,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF,GADY,CAEZ;;AACA,SAAKP,KAAL,CAAWG,YAAX,CAAwB,KAAKF,KAAL,CAAWC,IAAnC;AACAI,IAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,GAJY,CAKZ;AAEH;;AACDJ,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,SAAKI,QAAL,CAAc;AACV,OAACJ,CAAC,CAACE,MAAF,CAASG,IAAV,GAAiBL,CAAC,CAACE,MAAF,CAASI;AADhB,KAAd;AAGH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKV,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,YAAY,EAAC,KAAhC;AAAsC,MAAA,QAAQ,MAA9C;AAA+C,MAAA,IAAI,EAAC,MAApD;AAA2D,MAAA,EAAE,EAAC,MAA9D;AAAqE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAAvF;AAA6F,MAAA,QAAQ,EAAE,KAAKG,YAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADJ,CADJ;AASH;;AAjC8C","sourcesContent":["import React, { Component } from 'react';\n\nexport default class NewTodoForm extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             task: \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        // dispatch the state value from the input box & reset the input box\n        this.props.handleSubmit(this.state.task);\n        e.target.reset();\n        // this history props was passed down and is coming originally from react router\n        \n    }\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"task\">Enter a task: </label>\n                    <input type=\"text\" autoComplete=\"off\" required name=\"task\" id=\"task\" value={this.state.task} onChange={this.handleChange}></input>\n                    <button type=\"submit\">Add a task!</button>\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}